---
title: "Arduino : Contr√¥ler un moteur DC avec une carte Romeo"
subtitle: "[Liste de tutoriels](/)"  
metadata-files:
  - _metadata.yml
format:
  revealjs:
    footer: 'Tutoriel 3: Utilisation d‚Äôun moteur DC avec la carte Romeo'
    header: 'Arduino & Moteurs'
---

## But p√©dagogique de ce tutoriel

1. üß† **Connaissances** : 
   - Comprendre le fonctionnement d‚Äôun moteur DC et d‚Äôun pont en H (H-bridge)

2. üîß **Savoir-faire** : 
   - Contr√¥ler le sens et la vitesse d‚Äôun moteur DC avec PWM

3. ‚úç **Comp√©tences** : 
   - Int√©grer un moteur DC dans un projet Arduino avec carte Romeo


# Mat√©riel N√©cessaire

:::{layout="[35,68]"}
:::{}
| √âl√©ment                        | Qt√© |
|-------------------------------|-----|
| Carte Romeo (DFRobot)         | 1   |
| Motor√©ducteur RS PRO DC       | 1   |
| Alimentation externe 12V DC   | 1   |
| C√¢bles de connexion           | ~4  |
| PC avec Arduino IDE           | 1   |
:::

:::{}
![](figures/romeo-motor.png){width="100%" fig-align="center"}
:::
:::


# Sch√©ma de Connexion

## Connexion du moteur

:::{layout="[50,50]"}
:::{}

- Moteur ‚Üí Borniers **M1** de la carte Romeo  
- Alimentation 12V ‚Üí **VIN** et **GND** de la Romeo  
- USB ‚Üí pour programmer la carte  
- Le sens de rotation d√©pend du c√¢blage M1

::: {.callout-tip}
üîÅ Inverser les fils M1 si le sens de rotation est invers√©
:::
:::

::: {}
![](figures/motor-conn.png){width="100%" fig-align="center"}
:::
:::


# Code Arduino
## Contr√¥le de la vitesse et du sens

```cpp
// Contr√¥le d‚Äôun moteur DC via la carte Romeo

const int IN1 = 4;  // Contr√¥le du sens
const int IN2 = 5;  
const int ENA = 6;  // Vitesse via PWM

void setup() {
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENA, OUTPUT);
}

void loop() {
  // Tourne dans un sens
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  analogWrite(ENA, 150); // Vitesse moyenne (0‚Äì255)
  delay(2000);

  // Arr√™t
  analogWrite(ENA, 0);
  delay(1000);

  // Sens inverse
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  analogWrite(ENA, 200);
  delay(2000);

  // Arr√™t
  analogWrite(ENA, 0);
  delay(2000);
}
